# Development_of_applications_with_a_graphical_interface
Development of applications with a graphical interface. Event programming, working with dialog boxes
from tkinter import *
from tkinter.messagebox import *
from tkinter.colorchooser import *

figures_settings = {
    "triangle": {
        "color": "yellow",
        "coords": (50, 200, 340, 200, 110, 60)
    },
    "rectangle": {
        "color": "blue",
        "coords": (80, 50, 320, 200)
    },
    "circle": {
        "color": "red",
        "coords": (100, 50, 300, 250)
    }
}

text_settings = {
    "triangle": {
        "color": "blue",
        "size": 14
    },
    "rectangle": {
        "color": "black",
        "size": 14
    },
    "circle": {
        "color": "yellow",
        "size": 14
    }
}

i18n = {
    "triangle": "Трикутник",
    "rectangle": "Прямокутник",
    "circle": "Коло"
}

def select_figure_color(figure: str):
    rgb, color = askcolor(title="Виберіть колір")
    figures_settings[figure]["color"] = color

def save_figure_change(modal: Toplevel, figure: str, coords: str):
    if not coords == "":
        figures_settings[figure]["coords"] = tuple(coords.split(','))
    clear()
    modal.destroy()

def select_text_color(figure: str):
    rgb, color = askcolor(title="Виберіть колір")
    text_settings[figure]["color"] = color

def save_text_change(modal: Toplevel, figure: str, size: str):
    if not size == "":
        text_settings[figure]["size"] = int(size)
    clear()
    modal.destroy()

def change_figure(figure: str):
    modal = Toplevel(win)
    modal.transient(win)
    modal.grab_set()
    modal.geometry("+%d+%d" % (win.winfo_x() + 200, win.winfo_y() + 100))
    Label(modal, text=i18n[figure]).pack(pady=10)
    Label(modal, text="Введіть координати фігури").pack()
    coords = StringVar()
    entry_coords = Entry(modal, text=coords)
    entry_coords.pack(padx=100, pady=15)
    btn_color = Button(modal, text="Вибір кольору фігури",
                       command=lambda: select_figure_color(figure))
    btn_color.pack(pady=15)
    Button(modal, text="Готово", command=lambda: save_figure_change(
        modal, figure, coords.get())).pack()

def change_text(figure: str):
    modal = Toplevel(win)
    modal.transient(win)
    modal.grab_set()
    modal.geometry("+%d+%d" % (win.winfo_x() + 200, win.winfo_y() + 100))
    Label(modal, text=i18n[figure]).pack(pady=10)
    Label(modal, text="Введіть розмір тексту").pack()
    size = StringVar()
    entry_size = Entry(modal, text=size)
    entry_size.pack(padx=100, pady=15)
    btn_color = Button(modal, text="Вибір кольору тексту",
                       command=lambda: select_text_color(figure))
    btn_color.pack(pady=15)
    Button(modal, text="Готово", command=lambda: save_text_change(
        modal, figure, size.get())).pack()

def triangle():
    canvas.coords(r, (0, 0, 0, 0))
    canvas.coords(c, (0, 0, 0, 0))
    canvas.itemconfig(
        t, fill=figures_settings["triangle"]["color"], outline='white')
    canvas.coords(t, figures_settings["triangle"]["coords"])
    text.delete(1.0, END)
    text.insert(1.0, 'Зображення трикутника')
    text.tag_add('title', '1.0', '1.end')
    text.tag_config('title', font=(
        'Times', text_settings["triangle"]["size"]), foreground=text_settings["triangle"]["color"])

def rectangle():
    canvas.coords(t, (0, 0, 0, 0, 0, 0))
    canvas.coords(c, (0, 0, 0, 0))
    canvas.itemconfig(
        r, fill=figures_settings["rectangle"]["color"], outline='white')
    canvas.coords(r, figures_settings["rectangle"]["coords"])
    text.delete(1.0, END)
    text.insert(1.0, 'Зображення прямокутника')
    text.tag_add('title', '1.0', '1.end')
    text.tag_config('title', font=(
        'Times', text_settings["rectangle"]["size"]), foreground=text_settings["rectangle"]["color"])

def circle():
    canvas.coords(t, (0, 0, 0, 0, 0, 0))
    canvas.coords(r, (0, 0, 0, 0))
    canvas.itemconfig(
        c, fill=figures_settings["circle"]["color"], outline='white')
    canvas.coords(c, figures_settings["circle"]["coords"])
    text.delete(1.0, END)
    text.insert(1.0, 'Зображення кола')
    text.tag_add('title', '1.0', '1.end')
    text.tag_config('title', font=(
        'Times', text_settings["circle"]["size"]), foreground=text_settings["circle"]["color"])

def clear():
    canvas.coords(t, (0, 0, 0, 0, 0, 0))
    canvas.coords(r, (0, 0, 0, 0))
    canvas.coords(c, (0, 0, 0, 0))
    text.delete(1.0, END)

win = Tk()

selected_figure = StringVar(win)

menubar = Menu(win)

settings_menu = Menu(menubar, tearoff=0)

figures_menu = Menu(settings_menu, tearoff=0)
for figure in list(figures_settings.keys()):
    figures_menu.add_command(
        label=i18n[figure], command=lambda f=figure: change_figure(f))

text_menu = Menu(settings_menu, tearoff=0)
for figure in list(text_settings.keys()):
    text_menu.add_command(
        label=i18n[figure], command=lambda f=figure: change_text(f))

settings_menu.add_cascade(label="Налаштування фігур", menu=figures_menu)
settings_menu.add_cascade(label="Налаштування тексту", menu=text_menu)

menubar.add_cascade(label="Налаштування", menu=settings_menu)

b_triangle = Button(text="Трикутник", width=15, command=triangle)
b_rectangle = Button(text="Прямокутник", width=15, command=rectangle)
b_circle = Button(text="Коло", width=15, command=circle)
b_clear = Button(text="Очистити", width=15, command=clear)

b_settings = Button(text="Налаштуання", width=15)

canvas = Canvas(win, width=400, height=300, bg='#fff')
text = Text(width=55, height=5, bg='#fff', wrap=WORD)
t = canvas.create_polygon(0, 0, 0, 0, 0, 0)
r = canvas.create_rectangle(0, 0, 0, 0)
c = canvas.create_oval(0, 0, 0, 0)

b_triangle.grid(row=0, column=0)
b_rectangle.grid(row=1, column=0)
b_circle.grid(row=2, column=0)
b_clear.grid(row=3, column=0)

canvas.grid(row=0, column=1, rowspan=10)
text.grid(row=11, column=1, rowspan=3)

win.config(menu=menubar)
win.mainloop()
